name: Deploy Ghost Theme

on:
  push:
    tags:
      - 'v*.*.*'  # This will trigger the workflow for tags like v1.0.0

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pyjwt

      - name: Generate JWT token
        id: generate_token
        run: |
          echo "import requests" > generate_jwt.py
          echo "import jwt" >> generate_jwt.py
          echo "from datetime import datetime as date" >> generate_jwt.py
          echo "import os" >> generate_jwt.py
          echo "" >> generate_jwt.py
          echo "# Admin API key" >> generate_jwt.py
          echo "key = os.getenv('GHOST_ADMIN_API_KEY')" >> generate_jwt.py
          echo "" >> generate_jwt.py
          echo "# Split the key into ID and SECRET" >> generate_jwt.py
          echo "id, secret = key.split(':')" >> generate_jwt.py
          echo "" >> generate_jwt.py
          echo "# Prepare header and payload" >> generate_jwt.py
          echo "iat = int(date.now().timestamp())" >> generate_jwt.py
          echo "header = {'alg': 'HS256', 'typ': 'JWT', 'kid': id}" >> generate_jwt.py
          echo "payload = {" >> generate_jwt.py
          echo "    'iat': iat," >> generate_jwt.py
          echo "    'exp': iat + 5 * 60," >> generate_jwt.py
          echo "    'aud': '/admin/'" >> generate_jwt.py
          echo "}" >> generate_jwt.py
          echo "" >> generate_jwt.py
          echo "# Create the token (including decoding secret)" >> generate_jwt.py
          echo "token = jwt.encode(payload, bytes.fromhex(secret), algorithm='HS256', headers=header)" >> generate_jwt.py
          echo "" >> generate_jwt.py
          echo "# Print the token" >> generate_jwt.py
          echo "print(f'::set-output name=token::{token}')" >> generate_jwt.py
          python generate_jwt.py

      - name: Compress theme
        run: zip -r casper.zip .

      - name: Deploy to Ghost
        env:
          GHOST_ADMIN_API_URL: ${{ secrets.GHOST_ADMIN_API_URL }}
          GHOST_JWT_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          curl -X POST \
          -F "file=@casper.zip" \
          "$GHOST_ADMIN_API_URL/ghost/api/admin/themes/upload/" \
          -H "Authorization: Ghost $GHOST_JWT_TOKEN"
